{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactListItem/ContactListItem.module.scss"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","type","onChange","required","className","styles","margin","pattern","title","btn","Component","ContactListItem","el","delCont","listItem","onClick","ContactList","contacts","deleteContact","map","contact","id","Filter","handleChangeFilter","filter","App","addContact","find","alert","uuidv4","prevState","event","persist","filteredContact","toLowerCase","includes","contactId","console","log","length","root","document","querySelector","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.addda3cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styles from '../ContactListItem/ContactListItem.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <br />\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Number\n          <br />\n          <input\n            className={styles.margin}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './ContactListItem.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ el, delCont }) => (\n  <li className={styles.listItem}>\n    {el.name}: {el.number}\n    <button className={styles.btn} onClick={delCont}>\n      Delete\n    </button>\n  </li>\n);\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  el: PropTypes.object.isRequired,\n  delCont: PropTypes.func,\n};\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <section>\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          el={contact}\n          delCont={() => deleteContact(contact.id)}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet Filter = ({ handleChangeFilter, filter }) => {\n  return (\n    <section>\n      <label>\n        Find contacts by name\n        <input\n          onChange={handleChangeFilter}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n        />\n      </label>\n    </section>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find(contact => name === contact.name)) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  handleChangeFilter = event => {\n    event.persist();\n    this.setState(() => {\n      return { filter: event.target.value };\n    });\n  };\n\n  filteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = contactId => {\n    console.log(contactId);\n    this.setState(() => {\n      return {\n        contacts: this.state.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {this.state.contacts.length > 1 && (\n          <Filter\n            handleChangeFilter={this.handleChangeFilter}\n            filter={this.state.filter}\n          />\n        )}\n        <ContactList\n          contacts={this.filteredContact()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <App />\n  </react.StrictMode>,\n  root,\n);\n/* function testXor(numbers) {\n  return numbers.reduce((acc, e) => {\n    console.log(acc, e);\n    return acc ^ e;\n  });\n}\nconst test = [1, 1, 2, 2, 8, 7, 3, 3, 4, 4];\nconsole.log(testXor(test)); */\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2f9jH\",\"btn\":\"ContactListItem_btn__1i-hb\",\"margin\":\"ContactListItem_margin__2Conf\"};"],"sourceRoot":""}